/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasureMarket,
  TreasureMarketInterface,
} from "../TreasureMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "CancelSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "RoyaltySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
    ],
    name: "SaleComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "StartSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "cancelSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentagePoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasLessRateLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasLessRateLimit",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_treasureDeployedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePercentagePoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltyPercentagePoint",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "instantBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isForSaleById",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "priceById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyPercentagePoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_points",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_points",
        type: "uint256",
      },
    ],
    name: "setRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611f2061004b6000396000818161041a01528181610463015281816106b401526106f40152611f206000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063d34c13b21161006f578063d34c13b214610342578063dd028b7214610373578063ea1680661461038a578063ec16b94a146103a1578063f2fde38b146103c1578063f9e61d80146103e15761012a565b8063715018a614610291578063852a38bc146102a65780638da5cb5b146102b9578063aacdfe6f146102eb578063bd94b005146103225761012a565b80634f1ef286116100f25780634f1ef286146101e9578063572b6c05146101fc5780635c975abb1461023c57806366f0fa431461025157806369fe0e2d146102715761012a565b806324dcbd111461012f5780633659cfe6146101595780634209a2e11461017b57806344c816fa1461019b5780634ab229ee146101c9575b600080fd5b34801561013b57600080fd5b5061014661012d5481565b6040519081526020015b60405180910390f35b34801561016557600080fd5b50610179610174366004611aa0565b61040f565b005b34801561018757600080fd5b50610179610196366004611bc2565b6104e1565b3480156101a757600080fd5b506101466101b6366004611bc2565b6101346020526000908152604090205481565b3480156101d557600080fd5b506101796101e4366004611ad8565b610567565b6101796101f7366004611b03565b6106a9565b34801561020857600080fd5b5061022c610217366004611aa0565b61012e546001600160a01b0390811691161490565b6040519015158152602001610150565b34801561024857600080fd5b5061022c610763565b34801561025d57600080fd5b5061017961026c366004611bda565b61076d565b34801561027d57600080fd5b5061017961028c366004611bc2565b610843565b34801561029d57600080fd5b506101796108c2565b6101796102b4366004611bc2565b610917565b3480156102c557600080fd5b5060c9546001600160a01b03165b6040516001600160a01b039091168152602001610150565b3480156102f757600080fd5b506102d3610306366004611bc2565b610133602052600090815260409020546001600160a01b031681565b34801561032e57600080fd5b5061017961033d366004611bc2565b610e6a565b34801561034e57600080fd5b5061022c61035d366004611bc2565b6101316020526000908152604090205460ff1681565b34801561037f57600080fd5b5061014661012f5481565b34801561039657600080fd5b506101466101305481565b3480156103ad57600080fd5b506101796103bc366004611c2b565b610f90565b3480156103cd57600080fd5b506101796103dc366004611aa0565b611262565b3480156103ed57600080fd5b506101466103fc366004611bc2565b6101326020526000908152604090205481565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104615760405162461bcd60e51b815260040161045890611cc9565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610493611319565b6001600160a01b0316146104b95760405162461bcd60e51b815260040161045890611d15565b6104c281611347565b604080516000808252602082019092526104de91839190611390565b50565b6104e96114db565b6001600160a01b031661050460c9546001600160a01b031690565b6001600160a01b03161461052a5760405162461bcd60e51b815260040161045890611daf565b6101308190556040518181527f61c6cbb9f0b2149bf68a1b566b8a0983575f0335eaa8fc75c95985c223be179f906020015b60405180910390a150565b61056f6114db565b6001600160a01b031661058a60c9546001600160a01b031690565b6001600160a01b0316146105b05760405162461bcd60e51b815260040161045890611daf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146105fd576040519150601f19603f3d011682016040523d82523d6000602084013e610602565b606091505b50509050806106625760405162461bcd60e51b815260206004820152602660248201527f4661696c656420746f2073656e64204554482e205472616e73616374696f6e206044820152653330b4b6399760d11b6064820152608401610458565b7f5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa861068b6114db565b848460405161069c93929190611c72565b60405180910390a1505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106f25760405162461bcd60e51b815260040161045890611cc9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610724611319565b6001600160a01b03161461074a5760405162461bcd60e51b815260040161045890611d15565b61075382611347565b61075f82826001611390565b5050565b60975460ff165b90565b600054610100900460ff1680610786575060005460ff16155b6107a25760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff161580156107cd576000805460ff1961ff0019909116610100171660011790555b61012d86905561013580546001600160a01b038088166001600160a01b03199283161790925561012f85905561013084905561012e805492871692909116919091179055610819611508565b61082161158c565b6108296115fc565b801561083b576000805461ff00191690555b505050505050565b61084b6114db565b6001600160a01b031661086660c9546001600160a01b031690565b6001600160a01b03161461088c5760405162461bcd60e51b815260040161045890611daf565b61012f8190556040518181527f20461e09b8e557b77e107939f9ce6544698123aad0fc964ac5cc59b7df2e608f9060200161055c565b6108ca6114db565b6001600160a01b03166108e560c9546001600160a01b031690565b6001600160a01b03161461090b5760405162461bcd60e51b815260040161045890611daf565b6109156000611664565b565b600260fb54141561096a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610458565b600260fb556000818152610131602052604090205460ff166109c35760405162461bcd60e51b815260206004820152601260248201527124ba32b6903737ba103337b91039b0b6329760711b6044820152606401610458565b600081815261013260205260409020543414610a215760405162461bcd60e51b815260206004820152601f60248201527f496e636f727265637420616d6f756e74206f662076616c75652073656e742e006044820152606401610458565b600081815261013460205260409020544210610a745760405162461bcd60e51b815260206004820152601260248201527120bab1ba34b7b7103430b99032b73232b21760711b6044820152606401610458565b600081815261013360205260409020546001600160a01b0316610a9657600080fd5b60006103e86101305434610aaa9190611e1c565b610ab49190611dfc565b61013554604051634531409360e01b8152600481018590529192506000916001600160a01b039091169063453140939060240160206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611abc565b90506000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114610b86576040519150601f19603f3d011682016040523d82523d6000602084013e610b8b565b606091505b5050905080610bf25760405162461bcd60e51b815260206004820152602d60248201527f4661696c656420746f2073656e6420726f79616c74792e205472616e7361637460448201526c034b7b7103330b4b63997101d1609d1b6064820152608401610458565b60006103e861012f54610130546103e8610c0c9190611e3b565b610c169190611e3b565b610c209034611e1c565b610c2a9190611dfc565b6000868152610133602052604080822054905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114610c88576040519150601f19603f3d011682016040523d82523d6000602084013e610c8d565b606091505b5050905080610cf95760405162461bcd60e51b815260206004820152603260248201527f4661696c656420746f2073656e642066756e647320746f2073656c6c65722e206044820152712a3930b739b0b1ba34b7b7103330b4b6399760711b6064820152608401610458565b6000868152610131602052604090819020805460ff191690556101355490516331a9108f60e11b8152600481018890526001600160a01b03909116906342842e0e908290636352211e9060240160206040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d969190611abc565b610d9e6114db565b896040518463ffffffff1660e01b8152600401610dbd93929190611c72565b600060405180830381600087803b158015610dd757600080fd5b505af1158015610deb573d6000803e3d6000fd5b505050600087815261013360205260409020547febb6422d8396d72e34d9263e2b9eeb5a2fc6eeffc45b671c7c2c5c99b893cac791506001600160a01b031687610e336114db565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a15050600160fb5550505050565b610e726114db565b600082815261013360205260409020546001600160a01b03908116911614610e9957600080fd5b600081815261013160209081526040808320805460ff191690556101328252808320839055610133825280832080546001600160a01b0319169055610134909152812055610135546001600160a01b03166342842e0e30610ef86114db565b846040518463ffffffff1660e01b8152600401610f1793929190611c72565b600060405180830381600087803b158015610f3157600080fd5b505af1158015610f45573d6000803e3d6000fd5b505050507f8b0a052bd72fec557d5735593db719bcb565d7afec8d76ee165e317e8cc98409610f726114db565b604080516001600160a01b039092168252602082018490520161055c565b610f986114db565b610135546040516331a9108f60e11b8152600481018690526001600160a01b039283169290911690636352211e9060240160206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190611abc565b6001600160a01b03161461107d5760405162461bcd60e51b815260206004820152602560248201527f596f752063616e206e6f74206c6973742061737365747320796f7520646f6e746044820152641037bbb71760d91b6064820152608401610458565b816110ca5760405162461bcd60e51b815260206004820152601a60248201527f50726963652063616e206e6f742062652073657420746f20302e0000000000006044820152606401610458565b600181116111265760405162461bcd60e51b815260206004820152602360248201527f4475726174696f6e206f66207468652073616c65206d757374206265206c6f6e60448201526233b2b960e91b6064820152608401610458565b600083815261013160209081526040808320805460ff1916600117905561013290915290208290556111566114db565b60008481526101336020526040902080546001600160a01b0319166001600160a01b039290921691909117905561118d8142611de4565b60008481526101346020526040902055610135546001600160a01b03166342842e0e6111b76114db565b30866040518463ffffffff1660e01b81526004016111d793929190611c72565b600060405180830381600087803b1580156111f157600080fd5b505af1158015611205573d6000803e3d6000fd5b505050600084815261013360209081526040918290205482516001600160a01b0390911681529081018690529081018490527f233b57d2eb4596662357272de5323e86061c1720d23cf7989effd3d1c4d6e00c915060600161069c565b61126a6114db565b6001600160a01b031661128560c9546001600160a01b031690565b6001600160a01b0316146112ab5760405162461bcd60e51b815260040161045890611daf565b6001600160a01b0381166113105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610458565b6104de81611664565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b61134f6114db565b6001600160a01b031661136a60c9546001600160a01b031690565b6001600160a01b0316146104de5760405162461bcd60e51b815260040161045890611daf565b600061139a611319565b90506113a5846116b6565b6000835111806113b25750815b156113c3576113c1848461175b565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166114d457805460ff191660011781556040516001600160a01b038316602482015261144290869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b17905261175b565b50805460ff19168155611453611319565b6001600160a01b0316826001600160a01b0316146114cb5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610458565b6114d485611846565b5050505050565b61012e546000906001600160a01b0316331415611501575060131936013560601c61076a565b503361076a565b600054610100900460ff1680611521575060005460ff16155b61153d5760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff16158015611568576000805460ff1961ff0019909116610100171660011790555b611570611886565b6115786118f9565b80156104de576000805461ff001916905550565b600054610100900460ff16806115a5575060005460ff16155b6115c15760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff161580156115ec576000805460ff1961ff0019909116610100171660011790555b6115f4611886565b611578611969565b600054610100900460ff1680611615575060005460ff16155b6116315760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff1615801561165c576000805460ff1961ff0019909116610100171660011790555b6115786119e7565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803b61171a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610458565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6117ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610458565b600080846001600160a01b0316846040516117d59190611c56565b600060405180830381855af49150503d8060008114611810576040519150601f19603f3d011682016040523d82523d6000602084013e611815565b606091505b509150915061183d8282604051806060016040528060278152602001611ec460279139611a60565b95945050505050565b61184f816116b6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff168061189f575060005460ff16155b6118bb5760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff16158015611578576000805460ff1961ff00199091166101001716600117905580156104de576000805461ff001916905550565b600054610100900460ff1680611912575060005460ff16155b61192e5760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff16158015611959576000805460ff1961ff0019909116610100171660011790555b6115786119646114db565b611664565b600054610100900460ff1680611982575060005460ff16155b61199e5760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff161580156119c9576000805460ff1961ff0019909116610100171660011790555b6097805460ff1916905580156104de576000805461ff001916905550565b600054610100900460ff1680611a00575060005460ff16155b611a1c5760405162461bcd60e51b815260040161045890611d61565b600054610100900460ff16158015611a47576000805460ff1961ff0019909116610100171660011790555b600160fb5580156104de576000805461ff001916905550565b60608315611a6f575081611a99565b825115611a7f5782518084602001fd5b8160405162461bcd60e51b81526004016104589190611c96565b9392505050565b600060208284031215611ab1578081fd5b8135611a9981611eae565b600060208284031215611acd578081fd5b8151611a9981611eae565b60008060408385031215611aea578081fd5b8235611af581611eae565b946020939093013593505050565b60008060408385031215611b15578182fd5b8235611b2081611eae565b9150602083013567ffffffffffffffff80821115611b3c578283fd5b818501915085601f830112611b4f578283fd5b813581811115611b6157611b61611e98565b604051601f8201601f19908116603f01168101908382118183101715611b8957611b89611e98565b81604052828152886020848701011115611ba1578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215611bd3578081fd5b5035919050565b600080600080600060a08688031215611bf1578081fd5b853594506020860135611c0381611eae565b93506040860135611c1381611eae565b94979396509394606081013594506080013592915050565b600080600060608486031215611c3f578283fd5b505081359360208301359350604090920135919050565b60008251611c68818460208701611e52565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082528251806020840152611cb5816040850160208701611e52565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611df757611df7611e82565b500190565b600082611e1757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e3657611e36611e82565b500290565b600082821015611e4d57611e4d611e82565b500390565b60005b83811015611e6d578181015183820152602001611e55565b83811115611e7c576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104de57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e04ff38728cbb6d47ef76a64ff647e67120b85e5ea60f53bdc0f292156666bd64736f6c63430008020033";

export class TreasureMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasureMarket> {
    return super.deploy(overrides || {}) as Promise<TreasureMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TreasureMarket {
    return super.attach(address) as TreasureMarket;
  }
  connect(signer: Signer): TreasureMarket__factory {
    return super.connect(signer) as TreasureMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureMarketInterface {
    return new utils.Interface(_abi) as TreasureMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureMarket {
    return new Contract(address, _abi, signerOrProvider) as TreasureMarket;
  }
}
